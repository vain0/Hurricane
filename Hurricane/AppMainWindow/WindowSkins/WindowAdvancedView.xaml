<UserControl x:Class="Hurricane.AppMainWindow.WindowSkins.WindowAdvancedView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:behaviors="clr-namespace:Hurricane.GUI.Behaviors"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:converter="clr-namespace:Hurricane.GUI.Converter"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:hurricaneControls="clr-namespace:Hurricane.GUI.Controls"
             xmlns:listViewLayoutManager="clr-namespace:Hurricane.GUI.Extensions.ListViewLayoutManager"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:track="clr-namespace:Hurricane.Music.Track"
             xmlns:userControls="clr-namespace:Hurricane.Views.UserControls"
             xmlns:viewmodels="clr-namespace:Hurricane.ViewModels"
             xmlns:web="clr-namespace:Hurricane.Music.Track.WebApi"
             DataContext="{x:Static viewmodels:MainViewModel.Instance}"
             d:DesignHeight="500"
             d:DesignWidth="1000"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Styles/AdvancedTimelineSlider.xaml" />
                <ResourceDictionary Source="/Resources/Styles/RoundButtons.xaml" />
                <ResourceDictionary Source="/Resources/Styles/VectorMenuItem.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converter:FormatTimespan x:Key="FormatTimespan" />
            <converter:CollapsedOnNullValue x:Key="CollapsedOnNullValue" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="35" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <Grid>
            <Grid Background="{StaticResource WhiteColorBrush}"
                  MouseLeftButtonDown="Titlebar_MouseLeftButtonDown"
                  MouseLeftButtonUp="Titlebar_MouseLeftButtonUp"
                  MouseMove="Titlebar_OnMouseMove"
                  Opacity="0.0" />
            <TextBlock HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       FontSize="16"
                       Foreground="#FFAAAAAA"
                       IsHitTestVisible="False"
                       Text="Hurricane" />
        </Grid>
        <Button Grid.Row="0"
                Grid.RowSpan="2"
                Height="30"
                Margin="10,40,15,10"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Background="{StaticResource NormalColorBrush}"
                Command="{Binding OpenUpdater}"
                Visibility="{Binding Updater.UpdateFound,
                                     Converter={StaticResource BooleanToVisibilityConverter}}">
            <Button.Resources>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
            </Button.Resources>

            <TextBlock Foreground="White" Text="{DynamicResource NewUpdateAvailable}" />
        </Button>
        <TabControl Grid.Row="1"
                    SelectedIndex="{Binding MainTabControlIndex}"
                    controls:ControlsHelper.HeaderFontSize="13"
                    controls:TabControlHelper.Transition="{Binding MySettings.Config.TabControlTransition}">
            <TabControl.Resources>
                <Style BasedOn="{StaticResource MetroTabItem}" TargetType="TabItem">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding MySettings.Config.UseThinHeaders}" Value="True">
                            <Setter Property="controls:ControlsHelper.HeaderFontWeight" Value="Light" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding MySettings.Config.UseThinHeaders}" Value="False">
                            <Setter Property="controls:ControlsHelper.HeaderFontWeight" Value="Normal" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TabControl.Resources>
            <TabItem Header="{DynamicResource Playlists}">
                <TabItem.Resources>
                    <DataTemplate x:Key="DragAdornerPlaylist">
                        <Grid Width="190"
                              Height="25"
                              Background="{StaticResource AccentColorBrush2}">
                            <TextBlock Margin="10,0,0,0"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Foreground="White"
                                       Text="{Binding}" />
                        </Grid>
                    </DataTemplate>
                    <DataTemplate x:Key="DragAdornerTrack" DataType="{x:Type track:PlayableBase}">
                        <Grid Width="400"
                              Height="40"
                              Margin="1"
                              Background="{StaticResource AccentColorBrush3}">
                            <StackPanel Margin="10,0,0,0"
                                        VerticalAlignment="Center"
                                        Orientation="Vertical">
                                <TextBlock Foreground="White" Text="{Binding Title}" />
                                <TextBlock Foreground="White" Text="{Binding Artist}" />
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </TabItem.Resources>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200" />
                        <ColumnDefinition Width="1" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Menu Grid.ColumnSpan="3" Background="Transparent">
                        <MenuItem Background="Transparent" Header="{DynamicResource Playlist}">
                            <MenuItem Command="{Binding AddNewPlaylist}" Header="{DynamicResource NewPlaylist}" />
                            <Separator />
                            <MenuItem Command="{Binding RemovePlaylist}"
                                      Header="{DynamicResource RemovePlaylist}"
                                      IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}" />
                            <MenuItem Command="{Binding RenamePlaylist}"
                                      Header="{DynamicResource RenamePlaylist}"
                                      IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}" />
                        </MenuItem>
                        <MenuItem Background="Transparent" Header="{DynamicResource Tracks}">
                            <MenuItem Command="{Binding AddFilesToPlaylist}"
                                      Header="{DynamicResource AddFiles}"
                                      IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}" />
                            <MenuItem Command="{Binding AddFolderToPlaylist}"
                                      Header="{DynamicResource AddDirectories}"
                                      IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}" />
                            <Separator />
                            <MenuItem Command="{Binding AddCustomStream}"
                                      Header="{DynamicResource AddCustomStream}"
                                      IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}" />
                            <MenuItem Command="{Binding DownloadAllStreams}"
                                      Header="{DynamicResource DownloadAllStreams}"
                                      IsEnabled="{Binding MusicManager.SelectedPlaylist.ContainsDownloadableStreams}" />
                            <Separator />
                            <MenuItem Command="{Binding ReloadTrackInformation}"
                                      Header="{DynamicResource ReloadTrackInfo}"
                                      IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}" />
                            <MenuItem Header="{DynamicResource RemoveTracks}" IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}">
                                <MenuItem Command="{Binding RemoveMissingTracks}" Header="{DynamicResource RemoveMissingTracks}" />
                                <MenuItem Command="{Binding RemoveDuplicateTracks}" Header="{DynamicResource RemoveDuplicates}" />
                                <Separator />
                                <MenuItem Command="{Binding ClearSelectedPlaylist}" Header="{DynamicResource RemoveAllTracks}" />
                            </MenuItem>
                        </MenuItem>
                        <MenuItem Background="Transparent"
                                  Command="{Binding OpenOnlineSection}"
                                  Header="{DynamicResource Streams}" />
                        <MenuItem Background="Transparent"
                                  Command="{Binding OpenDownloadManager}"
                                  Header="{DynamicResource Downloads}">
                            <MenuItem.Style>
                                <Style BasedOn="{StaticResource MetroMenuItem}" TargetType="MenuItem">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MusicManager.DownloadManager.HasEntries}" Value="true">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                    </Menu>
                    <TextBox Grid.Row="0"
                             Grid.Column="0"
                             Grid.ColumnSpan="4"
                             Width="200"
                             Margin="0,0,10,0"
                             HorizontalAlignment="Right"
                             VerticalAlignment="Center"
                             Text="{Binding MusicManager.SelectedPlaylist.SearchText,
                                            UpdateSourceTrigger=PropertyChanged}"
                             controls:TextBoxHelper.ClearTextButton="True"
                             controls:TextBoxHelper.Watermark="{StaticResource Search}" />
                    <ListBox Grid.Row="1"
                             Grid.Column="0"
                             Margin="5"
                             Background="Transparent"
                             DisplayMemberPath="Name"
                             ItemsSource="{Binding MusicManager.Playlists}"
                             ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                             SelectedItem="{Binding MusicManager.SelectedPlaylist}"
                             dd:DragDrop.DefaultDragAdornerOpacity=".8"
                             dd:DragDrop.DragAdornerTemplate="{StaticResource DragAdornerPlaylist}"
                             dd:DragDrop.DropHandler="{Binding PlaylistListDropHandler}"
                             dd:DragDrop.IsDragSource="True"
                             dd:DragDrop.IsDropTarget="True">
                        <ListBox.InputBindings>
                            <KeyBinding Key="Delete" Command="{Binding RemovePlaylist}" />
                        </ListBox.InputBindings>
                        <ListBox.Resources>
                            <ContextMenu x:Key="PlaylistContextMenu">
                                <MenuItem Foreground="{StaticResource BlackBrush}" IsEnabled="False">
                                    <MenuItem.Resources>
                                        <converter:PlaylistInfoConverter x:Key="PlaylistInfoConverter" />
                                    </MenuItem.Resources>
                                    <MenuItem.Header>
                                        <Grid>
                                            <StackPanel Orientation="Vertical">
                                                <StackPanel.Resources>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="FontSize" Value="12" />
                                                    </Style>
                                                </StackPanel.Resources>
                                                <TextBlock FontSize="24"
                                                           FontWeight="Light"
                                                           Text="{Binding RelativeSource={RelativeSource AncestorType=ListBox},
                                                                          Path=SelectedItem.Name}" />
                                                <StackPanel Margin="0,5,0,0" Orientation="Horizontal">
                                                    <TextBlock Text="{DynamicResource Tracks}" />
                                                    <TextBlock Text=": " />
                                                    <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=SelectedItem, Converter={StaticResource PlaylistInfoConverter}, ConverterParameter=alltrackscount}" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{DynamicResource Duration}" />
                                                    <TextBlock Text=": " />
                                                    <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=SelectedItem, Converter={StaticResource PlaylistInfoConverter}, ConverterParameter=alltracksduration}" />
                                                </StackPanel>
                                            </StackPanel>
                                        </Grid>
                                    </MenuItem.Header>
                                </MenuItem>
                                <Separator />
                                <MenuItem Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext.RemovePlaylist}" Header="{DynamicResource RemovePlaylist}" />
                                <MenuItem Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext.RenamePlaylist}" Header="{DynamicResource RenamePlaylist}" />
                            </ContextMenu>
                        </ListBox.Resources>
                        <ListBox.ItemContainerStyle>
                            <Style BasedOn="{StaticResource MetroListBoxItem}" TargetType="ListBoxItem">
                                <Setter Property="ContextMenu" Value="{StaticResource PlaylistContextMenu}" />
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                    <Rectangle Grid.Row="1"
                               Grid.Column="1"
                               Width="1"
                               Fill="Gray" />
                    <Grid Grid.Row="1"
                          Grid.Column="2"
                          Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid>
                            <ListView x:Name="TracksListView"
                                      Background="Transparent"
                                      BorderThickness="0"
                                      DragEnter="ListView_DragEnter"
                                      Drop="ListView_Drop"
                                      ItemsSource="{Binding MusicManager.SelectedPlaylist.ViewSource}"
                                      SelectedItem="{Binding MusicManager.SelectedTrack}"
                                      SelectionChanged="ListView_SelectionChanged"
                                      SelectionMode="Extended"
                                      Style="{StaticResource VisualizingListView}"
                                      behaviors:ItemsControlAnimationBehavior.IsAnimationEnabled="True"
                                      dd:DragDrop.DragAdornerTemplate="{StaticResource DragAdornerTrack}"
                                      dd:DragDrop.DropHandler="{Binding TrackListDropHandler}"
                                      dd:DragDrop.IsDragSource="True"
                                      dd:DragDrop.IsDropTarget="True"
                                      listViewLayoutManager:ListViewLayoutManager.Enabled="True">
                                <ListView.Resources>
                                    <ResourceDictionary>
                                        <ResourceDictionary.MergedDictionaries>
                                            <ResourceDictionary Source="/Resources/Styles/TrackListViewUtils.xaml" />
                                        </ResourceDictionary.MergedDictionaries>
                                        <ContextMenu x:Key="FileContextMenu" DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext}">
                                            <MenuItem Command="{Binding MusicManager.Commands.PlaySelectedTrack}"
                                                      Header="{DynamicResource Play}"
                                                      InputGestureText="Enter"
                                                      IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}" />
                                            <Separator />
                                            <MenuItem Header="{DynamicResource AddTracks}" IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}">
                                                <MenuItem Command="{Binding AddFilesToPlaylist}"
                                                          Header="{DynamicResource AddFiles}"
                                                          InputGestureText="{DynamicResource Ins}" />
                                                <MenuItem Command="{Binding AddFolderToPlaylist}"
                                                          Header="{DynamicResource AddDirectories}"
                                                          InputGestureText="{DynamicResource CtrlIns}" />
                                            </MenuItem>
                                            <Separator />
                                            <MenuItem Header="{DynamicResource Queue}" IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}">
                                                <MenuItem Command="{Binding MusicManager.Commands.AddTracksToQueue}"
                                                          CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListView},
                                                                                     Path=SelectedItems}"
                                                          Header="{DynamicResource AddToQueue}"
                                                          InputGestureText="Q" />
                                                <MenuItem Command="{Binding MusicManager.Commands.RemoveFromQueue}"
                                                          Header="{DynamicResource RemoveFromQueue}"
                                                          InputGestureText="Alt+Q" />
                                                <MenuItem Command="{Binding MusicManager.Commands.ClearQueue}"
                                                          Header="{DynamicResource ClearQueue}"
                                                          IsEnabled="{Binding MusicManager.Queue.HasTracks}" />
                                                <Separator />
                                                <MenuItem Command="{Binding OpenQueueManager}"
                                                          Header="{DynamicResource QueueManager}"
                                                          InputGestureText="{DynamicResource CtrlQ}" />
                                            </MenuItem>
                                            <Separator />
                                            <MenuItem Command="{Binding OpenTrackInformation}"
                                                      Header="{DynamicResource TrackInformation}"
                                                      InputGestureText="F4"
                                                      IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}" />
                                            <MenuItem Command="{Binding OpenTagEditor}"
                                                      Header="{DynamicResource TagEditor}"
                                                      InputGestureText="F3"
                                                      IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}" />
                                            <MenuItem Command="{Binding MusicManager.Commands.OpenTrackLocation}"
                                                      Header="{DynamicResource FileLocation}"
                                                      InputGestureText="Alt+O"
                                                      IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}" />
                                            <Separator />
                                            <MenuItem Command="{Binding RemoveSelectedTracks}"
                                                      CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                                AncestorType=ListView},
                                                                                 Path=SelectedItems}"
                                                      Header="{DynamicResource Remove}"
                                                      InputGestureText="{DynamicResource Del}" />
                                        </ContextMenu>

                                        <ContextMenu x:Key="StreamContextMenu" d:DataContext="{d:DesignInstance track:StreamableBase}">
                                            <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                       AncestorType={x:Type ListView}},
                                                                        Path=DataContext.MusicManager.Commands.PlaySelectedTrack}"
                                                      Header="{DynamicResource Play}"
                                                      InputGestureText="Enter" />
                                            <Separator />
                                            <MenuItem Header="{DynamicResource AddTracks}" IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.MusicManager.SelectedPlaylist.CanEdit}">
                                                <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                           AncestorType={x:Type ListView}},
                                                                            Path=DataContext.AddFilesToPlaylist}"
                                                          Header="{DynamicResource AddFiles}"
                                                          InputGestureText="{DynamicResource Ins}" />
                                                <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                           AncestorType={x:Type ListView}},
                                                                            Path=DataContext.AddFolderToPlaylist}"
                                                          Header="{DynamicResource AddDirectories}"
                                                          InputGestureText="{DynamicResource CtrlIns}" />
                                            </MenuItem>
                                            <Separator />
                                            <MenuItem Header="{DynamicResource Queue}">
                                                <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                           AncestorType={x:Type ListView}},
                                                                            Path=DataContext.MusicManager.Commands.AddTracksToQueue}"
                                                          CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListView},
                                                                                     Path=SelectedItems}"
                                                          Header="{DynamicResource AddToQueue}"
                                                          InputGestureText="Q" />
                                                <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                           AncestorType={x:Type ListView}},
                                                                            Path=DataContext.MusicManager.Commands.RemoveFromQueue}"
                                                          Header="{DynamicResource RemoveFromQueue}"
                                                          InputGestureText="Alt+Q" />
                                                <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                           AncestorType={x:Type ListView}},
                                                                            Path=DataContext.MusicManager.Commands.ClearQueue}"
                                                          Header="{DynamicResource ClearQueue}"
                                                          IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                             AncestorType={x:Type ListView}},
                                                                              Path=DataContext.MusicManager.Queue.HasTracks}" />
                                                <Separator />
                                                <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                           AncestorType={x:Type ListView}},
                                                                            Path=DataContext.OpenQueueManager}"
                                                          Header="{DynamicResource QueueManager}"
                                                          InputGestureText="{DynamicResource CtrlQ}" />
                                            </MenuItem>
                                            <Separator />
                                            <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                       AncestorType={x:Type ListView}},
                                                                        Path=DataContext.OpenTrackInformation}"
                                                      Header="{DynamicResource TrackInformation}"
                                                      InputGestureText="F4" />
                                            <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                       AncestorType={x:Type ListView}},
                                                                        Path=DataContext.MusicManager.Commands.DownloadTracks}"
                                                      CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListView},
                                                                                 Path=SelectedItems}"
                                                      Header="{DynamicResource Download}"
                                                      IsEnabled="{Binding CanDownload}" />
                                            <MenuItem Command="{Binding OpenLinkCommand}"
                                                      Header="{DynamicResource OpenUrl}"
                                                      InputGestureText="Alt+O" />
                                            <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.ConvertStreamToLocalTrack}" Header="{DynamicResource ConvertToLocalTrack}">
                                                <MenuItem.Style>
                                                    <Style BasedOn="{StaticResource MetroMenuItem}" TargetType="MenuItem">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding CanDownload}" Value="False">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </MenuItem.Style>
                                            </MenuItem>
                                            <Separator />
                                            <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                       AncestorType={x:Type ListView}},
                                                                        Path=DataContext.RemoveSelectedTracks}"
                                                      CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                                AncestorType={x:Type ListView}},
                                                                                 Path=SelectedItems}"
                                                      Header="{DynamicResource Remove}"
                                                      InputGestureText="{DynamicResource Del}" />
                                        </ContextMenu>
                                        <Style x:Key="ListTextBlockStyle"
                                               TargetType="TextBlock"
                                               d:DataContext="{d:DesignInstance track:PlayableBase}">
                                            <Setter Property="Foreground" Value="{StaticResource BlackBrush}" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="False" />
                                                        <Condition Binding="{Binding IsOpened}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="{StaticResource NormalColorBrush}" />
                                                </MultiDataTrigger>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                                    <Setter Property="Foreground" Value="{StaticResource AccentSelectedColorBrush}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Style>
                                        <converter:TrueFalseValueConverter x:Key="TrueFalseValueConverter"
                                                                           FalseValue="#FFB4B4B4"
                                                                           TrueValue="White" />
                                    </ResourceDictionary>
                                </ListView.Resources>
                                <ListView.InputBindings>
                                    <KeyBinding Key="Delete"
                                                Command="{Binding RemoveSelectedTracks}"
                                                CommandParameter="{Binding ElementName=TracksListView,
                                                                           Path=SelectedItems}" />
                                    <KeyBinding Key="Enter" Command="{Binding MusicManager.Commands.PlaySelectedTrack}" />
                                    <KeyBinding Key="O"
                                                Command="{Binding MusicManager.Commands.OpenTrackLocation}"
                                                Modifiers="Alt" />
                                    <KeyBinding Key="Space" Command="{Binding MusicManager.Commands.TogglePlayPause}" />
                                    <KeyBinding Key="Q"
                                                Command="{Binding MusicManager.Commands.AddTracksToQueue}"
                                                CommandParameter="{Binding ElementName=TracksListView,
                                                                           Path=SelectedItems}" />
                                    <KeyBinding Key="Q"
                                                Command="{Binding MusicManager.Commands.RemoveFromQueue}"
                                                Modifiers="Alt" />
                                    <KeyBinding Key="Insert" Command="{Binding AddFilesToPlaylist}" />
                                    <KeyBinding Key="Insert"
                                                Command="{Binding AddFolderToPlaylist}"
                                                Modifiers="Control" />
                                    <KeyBinding Key="F4" Command="{Binding OpenTrackInformation}" />
                                    <KeyBinding Key="F3" Command="{Binding OpenTagEditor}" />
                                </ListView.InputBindings>
                                <ListView.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource ItemContainerStyle}"
                                           TargetType="ListViewItem"
                                           d:DataContext="{d:DesignInstance track:PlayableBase}">
                                        <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding TrackType}" Value="File">
                                                <Setter Property="ContextMenu" Value="{StaticResource FileContextMenu}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding TrackType}" Value="Stream">
                                                <Setter Property="ContextMenu" Value="{StaticResource StreamContextMenu}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsRemoving}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.5"
                                                                             Storyboard.TargetProperty="Opacity"
                                                                             To="0" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsAdded}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation Duration="0:0:0.5"
                                                                                FillBehavior="Stop"
                                                                                From="-40,0,40,0"
                                                                                Storyboard.TargetProperty="Margin"
                                                                                To="0" />
                                                            <DoubleAnimation Duration="0:0:0.5"
                                                                             FillBehavior="Stop"
                                                                             From="0"
                                                                             Storyboard.TargetProperty="Opacity"
                                                                             To="1" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Width="27">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type track:PlayableBase}">
                                                    <Grid Width="10" Margin="5,0,0,0">
                                                        <TextBlock HorizontalAlignment="Center" Text="{Binding QueueId}" />
                                                        <!--  We dont have to hide it because it gets automatically null  -->
                                                        <Viewbox Width="12" Height="12">
                                                            <Path Data="{StaticResource VectorPlay}">
                                                                <Path.Style>
                                                                    <Style TargetType="Path">
                                                                        <Setter Property="Fill" Value="{StaticResource AccentColorBrush}" />
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                                                                <Setter Property="Fill" Value="White" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Path.Style>
                                                            </Path>
                                                            <Viewbox.Style>
                                                                <Style TargetType="Viewbox">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                    <Style.Triggers>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsOpened}" Value="True" />
                                                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=DataContext.MusicManager.CSCoreEngine.IsPlaying}" Value="True" />
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Visibility" Value="Visible" />
                                                                            <MultiDataTrigger.EnterActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <ThicknessAnimation Duration="0:0:0.4"
                                                                                                            From="-5,0,5,0"
                                                                                                            Storyboard.TargetProperty="Margin"
                                                                                                            To="0" />
                                                                                        <DoubleAnimation Duration="0:0:0.2"
                                                                                                         From="0.5"
                                                                                                         Storyboard.TargetProperty="Opacity"
                                                                                                         To="1" />
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </MultiDataTrigger.EnterActions>
                                                                        </MultiDataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Viewbox.Style>
                                                        </Viewbox>
                                                        <Viewbox Width="12" Height="12">
                                                            <Path Data="{StaticResource VectorPause}" />
                                                            <Viewbox.Resources>
                                                                <Style TargetType="Path">
                                                                    <Setter Property="Fill" Value="{StaticResource AccentColorBrush}" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                                                            <Setter Property="Fill" Value="White" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Viewbox.Resources>
                                                            <Viewbox.Style>
                                                                <Style TargetType="Viewbox">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                    <Style.Triggers>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding IsOpened}" Value="True" />
                                                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=DataContext.MusicManager.CSCoreEngine.IsPlaying}" Value="False" />
                                                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=DataContext.MusicManager.CSCoreEngine.IsLoading}" Value="False" />
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Visibility" Value="Visible" />
                                                                            <MultiDataTrigger.EnterActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0:0:0.3"
                                                                                                         From="0.8"
                                                                                                         Storyboard.TargetProperty="Opacity"
                                                                                                         To="1" />
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </MultiDataTrigger.EnterActions>
                                                                        </MultiDataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Viewbox.Style>
                                                        </Viewbox>
                                                    </Grid>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn listViewLayoutManager:ProportionalColumn.Width="1">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type track:PlayableBase}">
                                                    <Grid Margin="10,0,0,0">
                                                        <TextBlock VerticalAlignment="Center"
                                                                   Style="{StaticResource ListTextBlockStyle}"
                                                                   Text="{Binding DisplayText}"
                                                                   TextTrimming="CharacterEllipsis" />
                                                    </Grid>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="80">
                                            <!-- favorite -->
                                        </GridViewColumn>
                                        <GridViewColumn Width="80">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type track:PlayableBase}">
                                                    <TextBlock Margin="0,0,10,0" VerticalAlignment="Center">
                                                        <TextBlock.Style>
                                                            <Style BasedOn="{StaticResource ListTextBlockStyle}" TargetType="TextBlock">
                                                                <Setter Property="Text" Value="{Binding Duration}" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Duration}" Value="00:00">
                                                                        <Setter Property="Text" Value="--:--" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="16"
                                       FontWeight="Light"
                                       Text="{DynamicResource NoTracksFound}"
                                       Visibility="{Binding MusicManager.SelectedPlaylist.ViewSource.IsEmpty,
                                                            Converter={StaticResource BooleanToVisibilityConverter}}"
                                       behaviors:FrameworkElementBehavior.AnimationTrigger="{Binding MusicManager.SelectedPlaylist}" />
                        </Grid>
                        <userControls:EqualizerView Grid.Row="1"
                                                    ShowLabelBelowSlider="True"
                                                    ShowSeparator="True"
                                                    SliderThickness="10"
                                                    WantCloseCommand="{Binding CloseEqualizer}">
                            <userControls:EqualizerView.Style>
                                <Style TargetType="userControls:EqualizerView">
                                    <Setter Property="Height" Value="200" />
                                    <Setter Property="Opacity" Value="0" />
                                    <Setter Property="Margin" Value="0,0,0,-200" />
                                    <Setter Property="IsHitTestVisible" Value="{Binding MySettings.CurrentState.EqualizerIsOpen}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MySettings.CurrentState.EqualizerIsOpen}" Value="true">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation Duration="0:0:0.3"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="0" />
                                                        <DoubleAnimation Duration="0:0:0.2"
                                                                         Storyboard.TargetProperty="Opacity"
                                                                         To="1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation Duration="0:0:0.3"
                                                                            Storyboard.TargetProperty="Margin"
                                                                            To="0,0,0,-200" />
                                                        <DoubleAnimation Duration="0:0:0.2"
                                                                         Storyboard.TargetProperty="Opacity"
                                                                         To="0" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </userControls:EqualizerView.Style>
                        </userControls:EqualizerView>
                    </Grid>
                    <Grid Grid.Row="1"
                          Grid.Column="3"
                          Width="230"
                          Visibility="{Binding MusicManager.CSCoreEngine.CurrentTrack,
                                               Converter={StaticResource CollapsedOnNullValue}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.InputBindings>
                            <MouseBinding Command="{Binding MusicManager.Commands.JumpToPlayingTrack}" MouseAction="LeftClick" />
                        </Grid.InputBindings>
                        <Rectangle Width="1" Fill="Gray" />
                        <StackPanel Grid.Column="1"
                                    Margin="5"
                                    Orientation="Vertical">
                            <hurricaneControls:TrackImagePreseter Width="200"
                                                                  Height="200"
                                                                  Track="{Binding MusicManager.CSCoreEngine.CurrentTrack}" />
                            <ContentControl Margin="10,10,0,0" Content="{Binding MusicManager.CSCoreEngine.CurrentTrack}">
                                <ContentControl.Resources>
                                    <DataTemplate x:Key="LocalTrackTemplate" DataType="{x:Type track:LocalTrack}">
                                        <hurricaneControls:AnimatedStackPanel AnimationInterval="300"
                                                                              Orientation="Vertical"
                                                                              UpdateObject="{Binding RelativeSource={RelativeSource AncestorType=ContentControl},
                                                                                                     Path=DataContext.MusicManager.CSCoreEngine.CurrentTrack}">
                                            <TextBlock Foreground="{StaticResource NormalColorBrush}"
                                                       Text="{Binding Artist}"
                                                       TextWrapping="Wrap"
                                                       behaviors:TextBlockBehavior.PlaceHolderText="{DynamicResource NoArtist}" />
                                            <TextBlock FontFamily="Segoe UI Light"
                                                       FontSize="22"
                                                       Text="{Binding Title}"
                                                       TextWrapping="Wrap" />
                                            <ToggleButton Width="16"
                                                          Height="16"
                                                          Margin="0,10,0,10"
                                                          HorizontalAlignment="Left"
                                                          Background="{StaticResource NormalColorBrush}"
                                                          Foreground="#FFB4B4B4"
                                                          IsChecked="{Binding IsFavorite}"
                                                          Style="{StaticResource FavoriteToggleButton}" />
                                            <StackPanel Margin="0,30,0,0" Orientation="Horizontal">
                                                <TextBlock Text="{DynamicResource Bitrate}" />
                                                <TextBlock Margin="5,0,0,0"
                                                           Foreground="{StaticResource NormalColorBrush}"
                                                           Text="{Binding kbps}" />
                                                <TextBlock Foreground="{StaticResource NormalColorBrush}" Text=" kbps" />
                                            </StackPanel>
                                            <StackPanel Margin="0,5,0,0" Orientation="Horizontal">
                                                <TextBlock Text="{DynamicResource Samplerate}" />
                                                <TextBlock Margin="5,0,0,0"
                                                           Foreground="{StaticResource NormalColorBrush}"
                                                           Text="{Binding kHz}" />
                                                <TextBlock Foreground="{StaticResource NormalColorBrush}" Text=" kHz" />
                                            </StackPanel>
                                            <StackPanel Margin="0,5,0,0" Orientation="Horizontal">
                                                <TextBlock Text="{DynamicResource Format}" />
                                                <TextBlock Margin="5,0,0,0"
                                                           Foreground="{StaticResource NormalColorBrush}"
                                                           Text="{Binding Extension}" />
                                            </StackPanel>
                                        </hurricaneControls:AnimatedStackPanel>
                                    </DataTemplate>
                                    <DataTemplate x:Key="StreamTemplate" DataType="{x:Type track:StreamableBase}">
                                        <hurricaneControls:AnimatedStackPanel AnimationInterval="300"
                                                                              Orientation="Vertical"
                                                                              UpdateObject="{Binding RelativeSource={RelativeSource AncestorType=ContentControl},
                                                                                                     Path=DataContext.MusicManager.CSCoreEngine.CurrentTrack}">
                                            <TextBlock Foreground="{StaticResource NormalColorBrush}"
                                                       Text="{Binding Artist}"
                                                       TextWrapping="Wrap"
                                                       behaviors:TextBlockBehavior.PlaceHolderText="{DynamicResource NoArtist}" />
                                            <TextBlock FontFamily="Segoe UI Light"
                                                       FontSize="22"
                                                       Text="{Binding Title}"
                                                       TextWrapping="Wrap" />
                                            <ToggleButton Width="16"
                                                          Height="16"
                                                          Margin="0,10,0,0"
                                                          HorizontalAlignment="Left"
                                                          Background="{StaticResource NormalColorBrush}"
                                                          Foreground="#FFB4B4B4"
                                                          IsChecked="{Binding IsFavorite}"
                                                          Style="{StaticResource FavoriteToggleButton}" />
                                            <Separator Margin="0,25,0,0" Background="Transparent" />
                                            <StackPanel Margin="0,5,0,0" Orientation="Horizontal">
                                                <StackPanel.Style>
                                                    <Style TargetType="StackPanel">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Uploader, Converter={StaticResource FalseOnEmptyString}}" Value="false">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </StackPanel.Style>
                                                <TextBlock Text="{DynamicResource Uploader}" />
                                                <TextBlock Margin="5,0,0,0"
                                                           Foreground="{StaticResource NormalColorBrush}"
                                                           Text="{Binding Uploader}" />
                                            </StackPanel>
                                            <StackPanel Margin="0,5,0,0" Orientation="Horizontal">
                                                <TextBlock Text="{DynamicResource Samplerate}" />
                                                <TextBlock Margin="5,0,0,0"
                                                           Foreground="{StaticResource NormalColorBrush}"
                                                           Text="{Binding kHz}" />
                                                <TextBlock Foreground="{StaticResource NormalColorBrush}" Text=" kHz" />
                                            </StackPanel>
                                            <StackPanel Margin="0,5,0,0" Orientation="Horizontal">
                                                <TextBlock Text="{DynamicResource Platform}" />
                                                <Viewbox Width="20"
                                                         Height="20"
                                                         Margin="10,0,0,0">
                                                    <ContentControl Margin="5,0,0,0" Content="{Binding}">
                                                        <ContentControl.Resources>
                                                            <DataTemplate DataType="{x:Type track:SoundCloudTrack}">
                                                                <Path Data="{Binding ProviderVector}" Fill="#FFFF3300" />
                                                            </DataTemplate>
                                                            <DataTemplate DataType="{x:Type track:YouTubeTrack}">
                                                                <Path Data="{Binding ProviderVector}" Fill="{StaticResource BlackBrush}" />
                                                            </DataTemplate>
                                                            <DataTemplate DataType="{x:Type track:CustomStream}">
                                                                <Path Data="{Binding ProviderVector}" Fill="{StaticResource BlackBrush}" />
                                                            </DataTemplate>
 
                                                        </ContentControl.Resources>
                                                    </ContentControl>
                                                </Viewbox>
                                            </StackPanel>
                                        </hurricaneControls:AnimatedStackPanel>
                                    </DataTemplate>
                                </ContentControl.Resources>
                                <ContentControl.Style>
                                    <Style TargetType="ContentControl">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.CurrentTrack.TrackType}" Value="Stream">
                                                <Setter Property="ContentTemplate" Value="{StaticResource StreamTemplate}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.CurrentTrack.TrackType}" Value="File">
                                                <Setter Property="ContentTemplate" Value="{StaticResource LocalTrackTemplate}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentControl.Style>
                            </ContentControl>
                        </StackPanel>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="{DynamicResource NowPlaying}">
                <Grid>
                    <Grid HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Visibility="{Binding MusicManager.CSCoreEngine.CurrentTrack,
                                               Converter={StaticResource CollapsedOnNullValue}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="500" />
                        </Grid.ColumnDefinitions>
                        <hurricaneControls:TrackImagePreseter Width="280"
                                                              Height="280"
                                                              Track="{Binding MusicManager.CSCoreEngine.CurrentTrack}" />
                        <Grid Grid.Column="2" Margin="0,25,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <hurricaneControls:AnimatedStackPanel AnimationInterval="300"
                                                                  Orientation="Vertical"
                                                                  UpdateObject="{Binding MusicManager.CSCoreEngine.CurrentTrack}">
                                <TextBlock FontSize="14"
                                           Foreground="{StaticResource NormalColorBrush}"
                                           Text="{Binding MusicManager.CSCoreEngine.CurrentTrack.Artist}" />
                                <TextBlock Margin="0,5,0,0"
                                           FontFamily="Segoe UI Light"
                                           FontSize="32"
                                           Text="{Binding MusicManager.CSCoreEngine.CurrentTrack.Title}"
                                           TextWrapping="Wrap"
                                           behaviors:TextBlockBehavior.PlaceHolderText="{DynamicResource NoArtist}" />
                                <TextBlock Margin="0,5,0,0"
                                           FontFamily="Segoe UI Light"
                                           FontSize="18"
                                           Foreground="DarkGray"
                                           Text="{Binding MusicManager.CSCoreEngine.CurrentTrack.Album}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <Trigger Property="Text" Value="">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </hurricaneControls:AnimatedStackPanel>
                            <ContentControl x:Name="AudioVisualisationContentControl"
                                            Grid.Row="1"
                                            Height="100"
                                            Margin="0,0,0,10"
                                            VerticalAlignment="Bottom"
                                            Focusable="False"
                                            behaviors:AudioVisualisationBehavior.AudioVisualisationForAdvancedWindow="{Binding MySettings.Config.ApplicationDesign.AudioVisualisation.Visualisation}">
                                <ContentControl.Style>
                                    <Style TargetType="ContentControl">
                                        <Setter Property="Opacity" Value="0" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.IsPlaying}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation BeginTime="0:0:1"
                                                                             Storyboard.TargetProperty="Opacity"
                                                                             To="0" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentControl.Style>
                            </ContentControl>
                        </Grid>
                    </Grid>
                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="26"
                               FontWeight="Light"
                               Text="{DynamicResource NothingToSeeHere}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.CurrentTrack}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </TabItem>
            <TabItem Header="{DynamicResource Settings}">
                <TabControl Margin="0,-2,0,0"
                            Padding="0"
                            controls:TabControlHelper.Transition="{Binding MySettings.Config.TabControlTransition}">
                    <TabControl.Resources>
                        <Style BasedOn="{StaticResource MetroTabItem}" TargetType="TabItem">
                            <Setter Property="controls:ControlsHelper.HeaderFontSize" Value="14" />
                        </Style>
                    </TabControl.Resources>
                    <TabItem Header="{DynamicResource General}">
                        <userControls:SettingsView Margin="0,10,0,0" />
                    </TabItem>
                    <TabItem Header="{DynamicResource KeyboardShortcuts}">
                        <userControls:KeyboardShortcutsView Margin="5,10,5,5" Focusable="False" />
                    </TabItem>
                    <TabItem Header="{DynamicResource About}">
                        <userControls:AboutView Margin="5" Focusable="False" />
                    </TabItem>
                </TabControl>
            </TabItem>
            <TabItem Header="Online" Visibility="Collapsed">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ComboBox Width="100"
                                  Margin="0,0,5,0"
                                  SelectedIndex="{Binding MusicManager.DownloadManager.SelectedService}">
                            <ComboBox.Resources>
                                <CollectionViewSource x:Key="ApiCollectionView" Source="{Binding MusicManager.TrackSearcher.MusicApis}" />
                                <converter:IsMusicApiConverter x:Key="IsMusicApiConverter" />
                            </ComboBox.Resources>
                            <ComboBox.ItemContainerStyle>
                                <Style BasedOn="{StaticResource MetroComboBoxItem}" TargetType="ComboBoxItem">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Converter={StaticResource IsMusicApiConverter}}" Value="true">
                                            <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.ItemContainerStyle>
                            <ComboBox.ItemsSource>
                                <CompositeCollection>
                                    <ComboBoxItem Content="{DynamicResource All}" />
                                    <CollectionContainer Collection="{Binding Source={StaticResource ApiCollectionView}}" />
                                </CompositeCollection>
                            </ComboBox.ItemsSource>
                        </ComboBox>
                        <ComboBox Grid.Column="1"
                                  IsEditable="True"
                                  ItemsSource="{Binding MusicManager.DownloadManager.Searches}"
                                  Text="{Binding MusicManager.TrackSearcher.SearchText,
                                                 UpdateSourceTrigger=PropertyChanged}"
                                  ToolTipService.ShowDuration="12000"
                                  controls:TextBoxHelper.ClearTextButton="True">
                            <ComboBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding MusicManager.TrackSearcher.SearchCommand}" />
                            </ComboBox.InputBindings>
                            <ComboBox.ToolTip>
                                <ToolTip>
                                    <StackPanel Orientation="Vertical">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock FontSize="14" Text="{DynamicResource AllowedInputs}" />
                                            <TextBlock FontSize="14" Text=":" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock FontWeight="Bold" Text="{DynamicResource Keyword}" />
                                            <TextBlock Text=" - " />
                                            <TextBlock FontStyle="Italic" Text="Eminem Beautiful" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock FontWeight="Bold" Text="{DynamicResource YouTubeVideoLink}" />
                                            <TextBlock Text=" - " />
                                            <TextBlock FontStyle="Italic" Text="https://www.youtube.com/watch?v=p7LdZ82kL7Q" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock FontWeight="Bold" Text="{DynamicResource YouTubePlaylistLink}" />
                                            <TextBlock Text=" - " />
                                            <TextBlock FontStyle="Italic" Text="https://www.youtube.com/playlist?list=PL55713C70BA91BD6E" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock FontWeight="Bold" Text="{DynamicResource SoundCloudLink}" />
                                            <TextBlock Text=" - " />
                                            <TextBlock FontStyle="Italic" Text="https://soundcloud.com/lensko/lensko-cetus" />
                                        </StackPanel>
                                    </StackPanel>
                                </ToolTip>
                            </ComboBox.ToolTip>
                        </ComboBox>
                    </Grid>
                    <Grid Grid.Row="1" Margin="0,5,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid Height="69" Margin="0,3,0,3">
                            <Grid.Resources>
                                <ContextMenu x:Key="NotAddedStreamContextMenu">
                                    <MenuItem Header="{DynamicResource AddToExistingPlaylist}" ItemsSource="{Binding MusicManager.Playlists}">
                                        <MenuItem.ItemContainerStyle>
                                            <Style BasedOn="{StaticResource MetroMenuItem}" TargetType="MenuItem">
                                                <Setter Property="Header" Value="{Binding Name}" />
                                                <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=DataContext.MusicManager.TrackSearcher.AddPlaylistToExisitingPlaylist}" />
                                                <Setter Property="CommandParameter" Value="{Binding}" />
                                            </Style>
                                        </MenuItem.ItemContainerStyle>
                                    </MenuItem>
                                    <MenuItem Command="{Binding MusicManager.TrackSearcher.AddPlaylistToNewPlaylist}" Header="{DynamicResource CreateNewPlaylist}" />
                                </ContextMenu>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="ContextMenu" Value="{StaticResource NotAddedStreamContextMenu}" />
                                    <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MusicManager.TrackSearcher.PlaylistResult}" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Duration="0:0:0.2"
                                                                        Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)"
                                                                        To="{StaticResource Gray9}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Duration="0:0:0.2"
                                                                        Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)"
                                                                        To="{StaticResource WhiteColor}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Image Height="69"
                                   Source="{Binding MusicManager.TrackSearcher.PlaylistResult.Thumbnail}"
                                   Stretch="UniformToFill" />
                            <!--  The resolution of the image is 120x90  -->
                            <StackPanel Grid.Column="1"
                                        Margin="10,0,0,0"
                                        Orientation="Vertical">
                                <TextBlock FontSize="14" Text="{Binding MusicManager.TrackSearcher.PlaylistResult.Title}" />
                                <TextBlock FontSize="12" Text="{Binding MusicManager.TrackSearcher.PlaylistResult.Uploader}" />
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontSize="11" Text="{Binding MusicManager.TrackSearcher.PlaylistResult.TotalTracks}" />
                                    <TextBlock FontSize="11" Text=" " />
                                    <TextBlock FontSize="11" Text="{DynamicResource Tracks}" />
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                        <TextBlock Grid.Row="0"
                                   Grid.RowSpan="2"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="16"
                                   FontWeight="Light"
                                   Text="{DynamicResource NothingFound}"
                                   Visibility="{Binding MusicManager.TrackSearcher.NothingFound,
                                                        Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <ListView Grid.Row="1"
                                  Background="Transparent"
                                  BorderThickness="0"
                                  ItemsSource="{Binding MusicManager.TrackSearcher.Results}"
                                  SelectedItem="{Binding MusicManager.TrackSearcher.SelectedTrack}"
                                  Style="{StaticResource VisualizingListView}"
                                  behaviors:GridViewSort.AutoSort="True"
                                  listViewLayoutManager:ListViewLayoutManager.Enabled="True">
                            <ListView.Resources>
                                <converter:FormatLargeNumber x:Key="FormatLargeNumber" />
                                <ContextMenu x:Key="ContextMenu" DataContext="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=DataContext}">
                                    <MenuItem Command="{Binding MusicManager.TrackSearcher.PlaySelectedTrack}" Header="{DynamicResource Play}" />
                                    <Separator />
                                    <MenuItem Header="{DynamicResource AddToPlaylist}">
                                        <MenuItem.Resources>
                                            <CollectionViewSource x:Key="MyMenuItems" Source="{Binding MusicManager.Playlists}" />
                                        </MenuItem.Resources>
                                        <MenuItem.ItemsSource>
                                            <CompositeCollection>
                                                <MenuItem Header="{DynamicResource NewPlaylist}" />
                                                <Separator />
                                                <CollectionContainer Collection="{Binding Source={StaticResource MyMenuItems}}" />
                                            </CompositeCollection>
                                        </MenuItem.ItemsSource>
                                        <MenuItem.ItemContainerStyle>
                                            <Style BasedOn="{StaticResource MetroMenuItem}" TargetType="MenuItem">
                                                <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=DataContext.MusicManager.TrackSearcher.AddToPlaylist}" />
                                                <Setter Property="CommandParameter" Value="{Binding}" />
                                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </MenuItem.ItemContainerStyle>
                                    </MenuItem>
                                    <MenuItem Command="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=SelectedItem.OpenUrl}" Header="{DynamicResource OpenUrl}" />
                                    <MenuItem Command="{Binding RelativeSource={RelativeSource AncestorType=ListView},
                                                                Path=DataContext.MusicManager.TrackSearcher.DownloadTrack}"
                                              Header="{DynamicResource Download}"
                                              IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=ListView},
                                                                  Path=SelectedItem.CanDownload}" />
                                </ContextMenu>
                                <Style BasedOn="{StaticResource MetroToolTip}" TargetType="ToolTip">
                                    <Setter Property="MaxWidth" Value="600" />
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <ContentPresenter Content="{TemplateBinding Content}">
                                                    <ContentPresenter.Resources>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="TextWrapping" Value="Wrap" />
                                                        </Style>
                                                    </ContentPresenter.Resources>
                                                </ContentPresenter>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.Resources>
                            <ListView.ItemContainerStyle>
                                <Style BasedOn="{StaticResource MetroListViewItem}" TargetType="ListViewItem">
                                    <Setter Property="behaviors:ControlBehavior.Command" Value="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=DataContext.MusicManager.TrackSearcher.PlaySelectedTrack}" />
                                    <Setter Property="ContextMenu" Value="{StaticResource ContextMenu}" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="{DynamicResource Track}"
                                                    behaviors:GridViewSort.PropertyName="Title"
                                                    listViewLayoutManager:ProportionalColumn.Width="1">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type web:WebTrackResultBase}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid Width="50"
                                                          Height="50"
                                                          Margin="5"
                                                          Background="{StaticResource WhiteBrush}">
                                                        <Grid.Effect>
                                                            <DropShadowEffect BlurRadius="5"
                                                                              Opacity="0.5"
                                                                              ShadowDepth="0"
                                                                              Color="{StaticResource BlackColor}" />
                                                        </Grid.Effect>
                                                        <Viewbox Margin="8">
                                                            <Path Data="{StaticResource VectorMusic}"
                                                                  Fill="{StaticResource BlackBrush}"
                                                                  RenderOptions.BitmapScalingMode="HighQuality"
                                                                  SnapsToDevicePixels="True" />
                                                        </Viewbox>
                                                        <Image Width="50"
                                                               Height="50"
                                                               Source="{Binding Image}"
                                                               Stretch="UniformToFill" />
                                                    </Grid>
                                                    <StackPanel Grid.Column="1"
                                                                VerticalAlignment="Center"
                                                                Orientation="Vertical">
                                                        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" />
                                                        <TextBlock Text="{Binding Uploader}" TextTrimming="CharacterEllipsis" />
                                                    </StackPanel>
                                                </Grid>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="100"
                                                    Header="{DynamicResource Duration}"
                                                    behaviors:GridViewSort.PropertyName="Duration"
                                                    listViewLayoutManager:FixedColumn.Width="100">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type web:WebTrackResultBase}">
                                                <TextBlock>
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Text" Value="{Binding Duration, Converter={StaticResource FormatTimespan}}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Duration, Converter={StaticResource FormatTimespan}}" Value="00:00">
                                                                    <Setter Property="Text" Value="-" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="200"
                                                    Header="{DynamicResource Views}"
                                                    behaviors:GridViewSort.PropertyName="Views"
                                                    listViewLayoutManager:FixedColumn.Width="200">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type web:WebTrackResultBase}">
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Margin="0,0,5,0">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock">
                                                                <Setter Property="Text" Value="{Binding Views, Converter={StaticResource FormatLargeNumber}}" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Views}" Value="0">
                                                                        <Setter Property="Text" Value="-" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                    <TextBlock Text="{DynamicResource Views}">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Views}" Value="0">
                                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </StackPanel>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="60"
                                                    Header="{DynamicResource Year}"
                                                    behaviors:GridViewSort.PropertyName="ReleaseYear"
                                                    listViewLayoutManager:FixedColumn.Width="60">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type web:WebTrackResultBase}">
                                                <TextBlock>
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Text" Value="{Binding Year}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Year}" Value="0">
                                                                    <Setter Property="Text" Value="-" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="80"
                                                    Header="Website"
                                                    behaviors:GridViewSort.PropertyName="ProviderName"
                                                    listViewLayoutManager:FixedColumn.Width="80">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type web:WebTrackResultBase}">
                                                <Viewbox Width="20" Height="20">
                                                    <Grid>
                                                        <Path Data="{Binding ProviderVector}">
                                                            <Path.Style>
                                                                <Style TargetType="Path">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding ProviderName}" Value="SoundCloud">
                                                                            <Setter Property="Fill" Value="#FFFF3300" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding ProviderName}" Value="YouTube">
                                                                            <Setter Property="Fill" Value="{StaticResource BlackBrush}" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding ProviderName}" Value="Grooveshark">
                                                                            <Setter Property="Fill" Value="{StaticResource BlackBrush}" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding ProviderName}" Value="Vkontakte">
                                                                            <Setter Property="Fill" Value="{StaticResource BlackBrush}" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=IsSelected}" Value="True">
                                                                            <Setter Property="Fill" Value="White" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Path.Style>
                                                        </Path>
                                                    </Grid>
                                                </Viewbox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <ProgressBar Grid.Row="2"
                                     VerticalAlignment="Bottom"
                                     IsIndeterminate="{Binding MusicManager.TrackSearcher.IsLoading}"
                                     Visibility="{Binding MusicManager.TrackSearcher.IsLoading,
                                                          Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid>
                <hurricaneControls:SliderWhichMakesMoves IsMoveToPointEnabled="True"
                                                         Maximum="{Binding MusicManager.CSCoreEngine.TrackLength}"
                                                         Value="{Binding MusicManager.CSCoreEngine.Position}">
                    <Slider.Style>
                        <Style BasedOn="{StaticResource AdvancedTimelineSlider}" TargetType="Slider">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.IsLoading}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Slider.Style>
                </hurricaneControls:SliderWhichMakesMoves>
                <Grid Height="5" Background="{StaticResource GrayBrush10}">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.IsLoading}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <controls:MetroProgressBar Foreground="{StaticResource AccentColorBrush}" IsIndeterminate="{Binding MusicManager.CSCoreEngine.IsLoading}" />
                </Grid>
            </Grid>
            <Grid Grid.Row="1">
                <StackPanel Margin="0,5,0,10"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom"
                            Orientation="Horizontal">
                    <ToggleButton Width="32"
                                  Height="32"
                                  Margin="0,0,9,0"
                                  Background="White"
                                  IsChecked="{Binding MusicManager.IsShuffleEnabled}"
                                  Style="{StaticResource RoundToggleButton}">
                        <Grid>
                            <Viewbox Width="12"
                                     Height="12"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     RenderOptions.BitmapScalingMode="HighQuality">
                                <Grid>
                                    <Path Data="{StaticResource VectorShuffle}" Fill="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=Foreground}" />
                                </Grid>
                            </Viewbox>
                        </Grid>
                    </ToggleButton>
                    <Button Width="32"
                            Height="32"
                            Background="White"
                            Command="{Binding MusicManager.Commands.GoBackward}"
                            Style="{StaticResource RoundButton}">
                        <Grid>
                            <Viewbox Width="12"
                                     Height="12"
                                     Margin="0,0,1,0"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     RenderOptions.BitmapScalingMode="HighQuality">
                                <Path Data="{StaticResource VectorFastBackward}" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" />
                            </Viewbox>
                        </Grid>
                    </Button>
                    <hurricaneControls:PlayPauseButton Width="45"
                                                       Height="45"
                                                       Margin="9,0,9,0"
                                                       Command="{Binding MusicManager.Commands.TogglePlayPause}"
                                                       IsPlaying="{Binding MusicManager.CSCoreEngine.IsPlaying}" />
                    <Button Width="32"
                            Height="32"
                            Background="White"
                            Command="{Binding MusicManager.Commands.GoForward}"
                            Style="{StaticResource RoundButton}">
                        <Grid>
                            <Viewbox Width="12"
                                     Height="12"
                                     Margin="1,0,0,0"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     RenderOptions.BitmapScalingMode="HighQuality">
                                <Path Data="{StaticResource VectorFastForward}" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" />
                            </Viewbox>
                        </Grid>
                    </Button>
                    <ToggleButton Width="32"
                                  Height="32"
                                  Margin="9,0,0,0"
                                  Background="White"
                                  IsChecked="{Binding MusicManager.IsLoopEnabled}"
                                  Style="{StaticResource RoundToggleButton}">
                        <Grid>
                            <Viewbox Width="12"
                                     Height="12"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     RenderOptions.BitmapScalingMode="HighQuality">
                                <Path Data="{StaticResource VectorRepeat}" Fill="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=Foreground}" />
                            </Viewbox>
                        </Grid>
                    </ToggleButton>
                </StackPanel>
                <StackPanel Margin="20,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                    <TextBlock Text="{Binding MusicManager.CSCoreEngine.CurrentTrackPosition, Converter={StaticResource FormatTimespan}}" />
                    <TextBlock Margin="10,0,10,0" Text="/" />
                    <TextBlock>
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="{Binding MusicManager.CSCoreEngine.CurrentTrackLength, Converter={StaticResource FormatTimespan}}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.TrackLength}" Value="0">
                                        <Setter Property="Text" Value="--:--" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
                <DockPanel Margin="0,0,20,0"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center">
                    <Viewbox Width="15"
                             Height="15"
                             Margin="0,0,5,0"
                             VerticalAlignment="Center">
                        <hurricaneControls:VolumeIcon CurrentVolume="{Binding MusicManager.CSCoreEngine.Volume}">
                            <hurricaneControls:VolumeIcon.InputBindings>
                                <MouseBinding Command="{Binding ToggleVolume}" MouseAction="LeftClick" />
                            </hurricaneControls:VolumeIcon.InputBindings>
                        </hurricaneControls:VolumeIcon>
                    </Viewbox>
                    <hurricaneControls:SliderWhichMakesMoves x:Name="VolumeSlider"
                                                             VerticalAlignment="Center"
                                                             IsMoveToPointEnabled="True"
                                                             LargeChange="0.1"
                                                             Maximum="1"
                                                             Minimum="0"
                                                             Style="{StaticResource AdvancedTimelineSlider}"
                                                             Value="{Binding MusicManager.CSCoreEngine.Volume}" />
                </DockPanel>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
