<UserControl x:Class="Hurricane.AppMainWindow.WindowSkins.WindowSmartView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:behaviors="clr-namespace:Hurricane.GUI.Behaviors"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:converter="clr-namespace:Hurricane.GUI.Converter"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:hurricaneControls="clr-namespace:Hurricane.GUI.Controls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:track="clr-namespace:Hurricane.Music.Track"
             xmlns:viewmodels="clr-namespace:Hurricane.ViewModels"
             Width="300"
             MinWidth="300"
             MinHeight="400"
             MaxWidth="300"
             DataContext="{x:Static viewmodels:MainViewModel.Instance}"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Styles/TimelineSlider.xaml" />
                <ResourceDictionary Source="/Resources/Styles/VolumeSlider.xaml" />
                <ResourceDictionary Source="/Resources/Styles/MetroWindowStyle.xaml" />
                <ResourceDictionary Source="/Resources/Styles/RoundButtons.xaml" />
                <ResourceDictionary Source="/Resources/Styles/VectorMenuItem.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <DockPanel LastChildFill="True">
            <Border x:Name="Titlebar"
                    Height="40"
                    Margin="0,0,0,0"
                    Background="Transparent"
                    DockPanel.Dock="Top"
                    MouseLeftButtonDown="Titlebar_MouseLeftButtonDown"
                    MouseLeftButtonUp="Titlebar_MouseLeftButtonUp">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.ColumnSpan="3"
                               Margin="10,10,0,10"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Foreground="#FFAAAAAA"
                               Text="Hurricane"
                               TextWrapping="NoWrap" />
                    <Viewbox Grid.Column="0"
                             Width="16"
                             Height="16"
                             Margin="10">
                        <Path Data="{StaticResource VectorHurricaneIcon}" Fill="{StaticResource BlackBrush}" />
                    </Viewbox>

                    <Button Grid.Column="2"
                            Width="20"
                            Height="20"
                            Margin="5,0,10,0"
                            VerticalAlignment="Center"
                            Click="CloseButton_Click"
                            Style="{StaticResource WindowButtonStyle}" />
                </Grid>
            </Border>
        </DockPanel>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.Resources>
                <converter:CollapsedOnNullValue x:Key="CollapsedOnNullValue" />
            </Grid.Resources>
            <Grid>
                <Button Height="30"
                        Background="{StaticResource NormalColorBrush}"
                        Command="{Binding OpenUpdater}"
                        Visibility="{Binding Updater.UpdateFound,
                                             Converter={StaticResource BooleanToVisibilityConverter}}"
                        behaviors:VisibilityAnimation.AnimationType="Fade">
                    <Button.Resources>
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
                    </Button.Resources>

                    <TextBlock Foreground="White" Text="{DynamicResource NewUpdateAvailable}" />
                </Button>
            </Grid>
            <DockPanel Grid.Row="1"
                       Margin="5,5,0,0"
                       Visibility="{Binding MusicManager.CSCoreEngine.CurrentTrack,
                                            Converter={StaticResource CollapsedOnNullValue}}">
                <Polygon x:Name="PlayPolygon"
                         Margin="0,2,0,0"
                         VerticalAlignment="Center"
                         Points="0,0 8,5, 0,10"
                         Stroke="{StaticResource AccentColorBrush}"
                         StrokeThickness="2" />
                <Grid Margin="5,0,5,0"
                      VerticalAlignment="Center"
                      Background="{StaticResource WhiteBrush}"
                      MouseEnter="Grid_MouseEnter"
                      MouseLeave="Grid_MouseLeave">
                    <controls:TransitioningContentControl x:Name="TitleTransitioningControl"
                                                          Transition="Down"
                                                          behaviors:TransitioningContentControlBehavior.DisplayText="{Binding MusicManager.CSCoreEngine.CurrentTrack}">
                        <controls:TransitioningContentControl.InputBindings>
                            <MouseBinding Command="{Binding MusicManager.Commands.JumpToPlayingTrack}" MouseAction="LeftClick" />
                        </controls:TransitioningContentControl.InputBindings>
                    </controls:TransitioningContentControl>
                </Grid>
            </DockPanel>
            <StackPanel Grid.Row="2" Margin="5">
                <Grid Margin="0,0,0,10">
                    <ContentControl x:Name="AudioVisualisationContentControl" behaviors:AudioVisualisationBehavior.AudioVisualisationForSmartWindow="{Binding MySettings.Config.ApplicationDesign.AudioVisualisation.Visualisation}">
                        <ContentControl.Style>
                            <Style TargetType="ContentControl">
                                <Setter Property="Opacity" Value="0" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.IsPlaying}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation BeginTime="0:0:1"
                                                                     Storyboard.TargetProperty="Opacity"
                                                                     To="0" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                    <StackPanel Margin="5"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                Orientation="Horizontal">
                        <Button Width="40"
                                Height="40"
                                Background="White"
                                Command="{Binding MusicManager.Commands.GoBackward}"
                                Style="{StaticResource RoundButton}">
                            <Grid>
                                <Viewbox Width="15"
                                         Height="15"
                                         Margin="-1.2,0,1.2,0"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         RenderOptions.BitmapScalingMode="HighQuality">
                                    <Path Data="{StaticResource VectorFastBackward}" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" />
                                </Viewbox>
                            </Grid>
                        </Button>
                        <hurricaneControls:PlayPauseButton Width="55"
                                                           Height="55"
                                                           Margin="10,0,10,0"
                                                           Background="Transparent"
                                                           Command="{Binding MusicManager.Commands.TogglePlayPause}"
                                                           IsPlaying="{Binding MusicManager.CSCoreEngine.IsPlaying}" />
                        <Button Width="40"
                                Height="40"
                                Background="White"
                                Command="{Binding MusicManager.Commands.GoForward}"
                                Style="{StaticResource RoundButton}">
                            <Grid>
                                <Viewbox Width="15"
                                         Height="15"
                                         Margin="1.2,0,-1.2,0"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         RenderOptions.BitmapScalingMode="HighQuality">
                                    <Path Data="{StaticResource VectorFastForward}" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" />
                                </Viewbox>
                            </Grid>
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid x:Name="BaseControlGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Orientation="Horizontal">
                        <StackPanel.Resources>
                            <Style x:Key="TogglePath" TargetType="Path">
                                <Setter Property="Fill" Value="{StaticResource BlackBrush}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True">
                                        <Setter Property="Fill" Value="{StaticResource GrayBrush10}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Resources>
                        <Button Width="24"
                                Height="24"
                                Command="{Binding ToggleEqualizer}"
                                Focusable="False">
                            <Viewbox Width="14"
                                     Height="14"
                                     Stretch="Fill">
                                <Path Data="{StaticResource VectorEqualizer}" Fill="{StaticResource BlackBrush}" />
                            </Viewbox>
                        </Button>
                        <ToggleButton Width="24"
                                      Height="24"
                                      Margin="5,0,0,0"
                                      Focusable="False"
                                      IsChecked="{Binding MusicManager.IsShuffleEnabled}">
                            <Viewbox>
                                <Path Data="{StaticResource VectorRandom}" Style="{StaticResource TogglePath}" />
                            </Viewbox>
                        </ToggleButton>
                        <ToggleButton Width="24"
                                      Height="24"
                                      Margin="5,0,0,0"
                                      Focusable="False"
                                      IsChecked="{Binding MusicManager.IsLoopEnabled}">
                            <Viewbox Stretch="UniformToFill">
                                <Path Data="{StaticResource VectorRepeat}" Style="{StaticResource TogglePath}" />
                            </Viewbox>
                        </ToggleButton>
                    </StackPanel>
                    <DockPanel Grid.Column="1" Margin="20,0,0,0">
                        <Viewbox Width="15"
                                 Height="15"
                                 Margin="0,0,5,0"
                                 VerticalAlignment="Center">
                            <hurricaneControls:VolumeIcon CurrentVolume="{Binding MusicManager.CSCoreEngine.Volume}">
                                <hurricaneControls:VolumeIcon.InputBindings>
                                    <MouseBinding Command="{Binding ToggleVolume}" MouseAction="LeftClick" />
                                </hurricaneControls:VolumeIcon.InputBindings>
                            </hurricaneControls:VolumeIcon>
                        </Viewbox>
                        <hurricaneControls:SliderWhichMakesMoves x:Name="VolumeSlider"
                                                                 VerticalAlignment="Center"
                                                                 IsMoveToPointEnabled="True"
                                                                 LargeChange="0.1"
                                                                 Maximum="1"
                                                                 Minimum="0"
                                                                 Style="{StaticResource VolumeSliderStyle}"
                                                                 Value="{Binding MusicManager.CSCoreEngine.Volume}" />
                    </DockPanel>
                </Grid>
                <Grid Margin="0,8,0,5">
                    <hurricaneControls:SliderWhichMakesMoves Width="{Binding ElementName=BaseControlGrid,
                                                                             Path=ActualWidth}"
                                                             HorizontalAlignment="Stretch"
                                                             VerticalAlignment="Bottom"
                                                             IsMoveToPointEnabled="True"
                                                             Maximum="{Binding MusicManager.CSCoreEngine.TrackLength}"
                                                             Value="{Binding MusicManager.CSCoreEngine.Position}">
                        <Slider.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.MergedDictionaries>
                                    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml" />
                                </ResourceDictionary.MergedDictionaries>
                            </ResourceDictionary>
                        </Slider.Resources>
                        <Slider.Style>
                            <Style BasedOn="{StaticResource FlatSlider}" TargetType="Slider">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.IsLoading}" Value="True">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Slider.Style>
                    </hurricaneControls:SliderWhichMakesMoves>
                    <controls:MetroProgressBar Foreground="{StaticResource AccentColorBrush}" IsIndeterminate="{Binding MusicManager.CSCoreEngine.IsLoading}">
                        <controls:MetroProgressBar.Style>
                            <Style TargetType="controls:MetroProgressBar">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.IsLoading}" Value="False">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controls:MetroProgressBar.Style>
                    </controls:MetroProgressBar>
                </Grid>
            </StackPanel>
            <Grid Grid.Row="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Margin="5,0,5,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <ComboBox Grid.Column="1"
                              Height="27"
                              Margin="0,0,3,0"
                              VerticalAlignment="Center"
                              DisplayMemberPath="Name"
                              ItemsSource="{Binding MusicManager.Playlists}"
                              SelectedItem="{Binding MusicManager.SelectedPlaylist}" />
                    <Menu Grid.Column="2"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center">
                        <hurricaneControls:VectorMenuItem Height="25"
                                                          VerticalAlignment="Center"
                                                          Background="{StaticResource WhiteBrush}"
                                                          Style="{StaticResource VectorMenuItem}"
                                                          VectorGraphic="{StaticResource VectorPlus}">
                            <MenuItem Command="{Binding AddNewPlaylist}" Header="{DynamicResource NewPlaylist}">
                                <MenuItem.Icon>
                                    <Viewbox Stretch="Uniform">
                                        <Path Data="{StaticResource VectorAdd}" Fill="{StaticResource BlackBrush}" />
                                    </Viewbox>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <MenuItem Command="{Binding AddFilesToPlaylist}"
                                      Header="{DynamicResource AddFiles}"
                                      IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}">
                                <MenuItem.Icon>
                                    <Viewbox Width="16"
                                             Height="16"
                                             Stretch="Uniform">
                                        <Path Data="{StaticResource VectorAddFile}" Fill="{StaticResource BlackBrush}" />
                                    </Viewbox>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding AddFolderToPlaylist}"
                                      Header="{DynamicResource AddDirectories}"
                                      IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}">
                                <MenuItem.Icon>
                                    <Viewbox Width="16"
                                             Height="16"
                                             Stretch="Uniform">
                                        <Path Data="{StaticResource VectorAddFolder}" Fill="{StaticResource BlackBrush}" />
                                    </Viewbox>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <MenuItem Command="{Binding RenamePlaylist}"
                                      Header="{DynamicResource RenamePlaylist}"
                                      IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}">
                                <MenuItem.Icon>
                                    <Viewbox Width="16"
                                             Height="16"
                                             Stretch="Uniform">
                                        <Path Data="{StaticResource VectorRename}"
                                              Fill="{StaticResource BlackBrush}"
                                              Stroke="{StaticResource BlackBrush}" />
                                    </Viewbox>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding RemovePlaylist}"
                                      Header="{DynamicResource RemovePlaylist}"
                                      IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}">
                                <MenuItem.Icon>
                                    <Viewbox Width="13"
                                             Height="16"
                                             Stretch="Uniform">
                                        <Path Data="{StaticResource VectorDelete}" Stroke="{StaticResource BlackBrush}" />
                                    </Viewbox>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <MenuItem Command="{Binding ReloadTrackInformation}" Header="{DynamicResource ReloadTrackInfo}">
                                <MenuItem.Icon>
                                    <Viewbox Width="13"
                                             Height="16"
                                             Stretch="Uniform">
                                        <Path Data="{StaticResource VectorRefresh}" Fill="{StaticResource BlackBrush}" />
                                    </Viewbox>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource RemoveTracks}" IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}">
                                <MenuItem.Icon>
                                    <Viewbox Stretch="Uniform">
                                        <Path Data="{StaticResource VectorRemove}" Fill="{StaticResource BlackBrush}" />
                                    </Viewbox>
                                </MenuItem.Icon>
                                <MenuItem Command="{Binding RemoveMissingTracks}" Header="{DynamicResource RemoveMissingTracks}" />
                                <MenuItem Command="{Binding RemoveDuplicateTracks}" Header="{DynamicResource RemoveDuplicates}" />
                                <Separator />
                                <MenuItem Command="{Binding ClearSelectedPlaylist}" Header="{DynamicResource RemoveAllTracks}" />
                            </MenuItem>
                        </hurricaneControls:VectorMenuItem>
                    </Menu>
                </Grid>
                <ListView x:Name="TracksListView"
                          Grid.Row="1"
                          Margin="0,5,-1,0"
                          HorizontalContentAlignment="Stretch"
                          Background="{StaticResource WhiteBrush}"
                          DragEnter="listview_DragEnter"
                          Drop="listview_Drop"
                          IsSynchronizedWithCurrentItem="True"
                          ItemsSource="{Binding MusicManager.SelectedPlaylist.ViewSource}"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                          ScrollViewer.VerticalScrollBarVisibility="Visible"
                          SelectedItem="{Binding MusicManager.SelectedTrack}"
                          SelectionChanged="listview_SelectionChanged"
                          SelectionMode="Extended"
                          Style="{StaticResource VisualizingListView}"
                          behaviors:ItemsControlAnimationBehavior.IsAnimationEnabled="True">
                    <ListView.InputBindings>
                        <KeyBinding Key="Delete"
                                    Command="{Binding RemoveSelectedTracks}"
                                    CommandParameter="{Binding ElementName=TracksListView,
                                                               Path=SelectedItems}" />
                        <KeyBinding Key="Enter" Command="{Binding MusicManager.Commands.PlaySelectedTrack}" />
                        <KeyBinding Key="O"
                                    Command="{Binding MusicManager.Commands.OpenTrackLocation}"
                                    Modifiers="Alt" />
                        <KeyBinding Key="Space" Command="{Binding MusicManager.Commands.TogglePlayPause}" />
                        <KeyBinding Key="Q"
                                    Command="{Binding MusicManager.Commands.AddTracksToQueue}"
                                    CommandParameter="{Binding ElementName=TracksListView,
                                                               Path=SelectedItems}" />
                        <KeyBinding Key="Q"
                                    Command="{Binding MusicManager.Commands.RemoveFromQueue}"
                                    Modifiers="Alt" />
                        <KeyBinding Key="Q"
                                    Command="{Binding OpenQueueManager}"
                                    Modifiers="Control" />
                        <KeyBinding Key="Insert" Command="{Binding AddFilesToPlaylist}" />
                        <KeyBinding Key="Insert"
                                    Command="{Binding AddFolderToPlaylist}"
                                    Modifiers="Control" />
                        <KeyBinding Key="F4" Command="{Binding OpenTrackInformation}" />
                        <KeyBinding Key="F3" Command="{Binding OpenTagEditor}" />
                    </ListView.InputBindings>
                    <ListView.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <ResourceDictionary Source="/Resources/Styles/TrackListViewUtils.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                            <converter:TrueFalseValueConverter x:Key="BoldIfPlayingConverter"
                                                               FalseValue="Normal"
                                                               TrueValue="Bold" />
                            <ContextMenu x:Key="FileContextMenu" DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext}">
                                <MenuItem Command="{Binding MusicManager.Commands.PlaySelectedTrack}"
                                          Header="{DynamicResource Play}"
                                          InputGestureText="Enter"
                                          IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}" />
                                <Separator />
                                <MenuItem Header="{DynamicResource AddTracks}" IsEnabled="{Binding MusicManager.SelectedPlaylist.CanEdit}">
                                    <MenuItem Command="{Binding AddFilesToPlaylist}"
                                              Header="{DynamicResource AddFiles}"
                                              InputGestureText="{DynamicResource Ins}">
                                        <MenuItem.Icon>
                                            <Viewbox Width="16"
                                                     Height="16"
                                                     Stretch="Uniform">
                                                <Path Data="{StaticResource VectorAddFile}" Fill="{StaticResource BlackBrush}" />
                                            </Viewbox>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Command="{Binding AddFolderToPlaylist}"
                                              Header="{DynamicResource AddDirectories}"
                                              InputGestureText="{DynamicResource CtrlIns}">
                                        <MenuItem.Icon>
                                            <Viewbox Width="16"
                                                     Height="16"
                                                     Stretch="Uniform">
                                                <Path Data="{StaticResource VectorAddFolder}" Fill="{StaticResource BlackBrush}" />
                                            </Viewbox>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </MenuItem>
                                <Separator />
                                <MenuItem Header="{DynamicResource Queue}" IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}">
                                    <MenuItem Command="{Binding MusicManager.Commands.AddTracksToQueue}"
                                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListView},
                                                                         Path=SelectedItems}"
                                              Header="{DynamicResource AddToQueue}"
                                              InputGestureText="Q" />
                                    <MenuItem Command="{Binding MusicManager.Commands.RemoveFromQueue}"
                                              Header="{DynamicResource RemoveFromQueue}"
                                              InputGestureText="Alt+Q" />
                                    <MenuItem Command="{Binding MusicManager.Commands.ClearQueue}"
                                              Header="{DynamicResource ClearQueue}"
                                              IsEnabled="{Binding MusicManager.Queue.HasTracks}" />
                                    <Separator />
                                    <MenuItem Command="{Binding OpenQueueManager}"
                                              Header="{DynamicResource QueueManager}"
                                              InputGestureText="{DynamicResource CtrlQ}" />
                                </MenuItem>
                                <Separator />
                                <MenuItem Command="{Binding OpenTrackInformation}"
                                          Header="{DynamicResource TrackInformation}"
                                          InputGestureText="F4"
                                          IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}" />
                                <MenuItem Command="{Binding OpenTagEditor}"
                                          Header="{DynamicResource TagEditor}"
                                          InputGestureText="F3"
                                          IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}" />
                                <MenuItem Command="{Binding MusicManager.Commands.OpenTrackLocation}"
                                          Header="{DynamicResource FileLocation}"
                                          InputGestureText="Alt+O"
                                          IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}" />
                                <Separator />
                                <MenuItem Command="{Binding RemoveSelectedTracks}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                    AncestorType={x:Type ListView}},
                                                                     Path=SelectedItems}"
                                          Header="{DynamicResource Remove}"
                                          InputGestureText="{DynamicResource Del}" />
                            </ContextMenu>
                            <ContextMenu x:Key="StreamContextMenu" d:DataContext="{d:DesignInstance track:StreamableBase}">
                                <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                           AncestorType={x:Type ListView}},
                                                            Path=DataContext.MusicManager.Commands.PlaySelectedTrack}"
                                          Header="{DynamicResource Play}"
                                          InputGestureText="Enter" />
                                <Separator />
                                <MenuItem Header="{DynamicResource AddTracks}" IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.MusicManager.SelectedPlaylist.CanEdit}">
                                    <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                               AncestorType={x:Type ListView}},
                                                                Path=DataContext.AddFilesToPlaylist}"
                                              Header="{DynamicResource AddFiles}"
                                              InputGestureText="{DynamicResource Ins}" />
                                    <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                               AncestorType={x:Type ListView}},
                                                                Path=DataContext.AddFolderToPlaylist}"
                                              Header="{DynamicResource AddDirectories}"
                                              InputGestureText="{DynamicResource CtrlIns}" />
                                </MenuItem>
                                <Separator />
                                <MenuItem Header="{DynamicResource Queue}">
                                    <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                               AncestorType={x:Type ListView}},
                                                                Path=DataContext.MusicManager.Commands.AddTracksToQueue}"
                                              CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                        AncestorType={x:Type ListView}},
                                                                         Path=SelectedItems}"
                                              Header="{DynamicResource AddToQueue}"
                                              InputGestureText="Q" />
                                    <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                               AncestorType={x:Type ListView}},
                                                                Path=DataContext.MusicManager.Commands.RemoveFromQueue}"
                                              Header="{DynamicResource RemoveFromQueue}"
                                              InputGestureText="Alt+Q" />
                                    <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                               AncestorType={x:Type ListView}},
                                                                Path=DataContext.MusicManager.Commands.ClearQueue}"
                                              Header="{DynamicResource ClearQueue}"
                                              IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                 AncestorType={x:Type ListView}},
                                                                  Path=DataContext.MusicManager.Queue.HasTracks}" />
                                    <Separator />
                                    <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                               AncestorType={x:Type ListView}},
                                                                Path=DataContext.OpenQueueManager}"
                                              Header="{DynamicResource QueueManager}"
                                              InputGestureText="{DynamicResource CtrlQ}" />
                                </MenuItem>
                                <Separator />
                                <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                           AncestorType={x:Type ListView}},
                                                            Path=DataContext.OpenTrackInformation}"
                                          Header="{DynamicResource TrackInformation}"
                                          InputGestureText="F4" />
                                <MenuItem Command="{Binding OpenLinkCommand}"
                                          Header="{DynamicResource OpenUrl}"
                                          InputGestureText="Alt+O" />
                                <Separator />
                                <MenuItem Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                           AncestorType={x:Type ListView}},
                                                            Path=DataContext.RemoveSelectedTracks}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                    AncestorType={x:Type ListView}},
                                                                     Path=SelectedItems}"
                                          Header="{DynamicResource Remove}"
                                          InputGestureText="{DynamicResource Del}" />
                            </ContextMenu>
                        </ResourceDictionary>
                    </ListView.Resources>
                    <ListView.ItemContainerStyle>
                        <Style BasedOn="{StaticResource ItemContainerStyle}"
                               TargetType="ListViewItem"
                               d:DataContext="{d:DesignInstance track:PlayableBase}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding TrackType}" Value="File">
                                    <Setter Property="ContextMenu" Value="{StaticResource FileContextMenu}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding TrackType}" Value="Stream">
                                    <Setter Property="ContextMenu" Value="{StaticResource StreamContextMenu}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate DataType="{x:Type track:PlayableBase}">
                            <Grid Margin="4" Background="#01FFFFFF">
                                <Grid.InputBindings>
                                    <MouseBinding Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.MusicManager.Commands.PlaySelectedTrack}" Gesture="LeftDoubleClick" />
                                </Grid.InputBindings>
                                <Grid.Resources>
                                    <converter:TrueFalseValueConverter x:Key="TrueFalseValueConverter"
                                                                       FalseValue="0"
                                                                       TrueValue="2" />
                                </Grid.Resources>
                                <Border Margin="-4"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        BorderBrush="{StaticResource LightColorBrush}"
                                        BorderThickness="{Binding IsOpened,
                                                                  Converter={StaticResource TrueFalseValueConverter}}">
                                    <StackPanel Margin="3" Orientation="Vertical">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="50" />
                                            </Grid.ColumnDefinitions>
                                            <StackPanel Orientation="Horizontal" Visibility="{Binding QueueId, Converter={StaticResource CollapsedOnNullValue}}">
                                                <TextBlock Text="[" />
                                                <TextBlock Text="{Binding QueueId}" />
                                                <TextBlock Text="]" />
                                            </StackPanel>
                                            <TextBlock Grid.Column="1"
                                                       FontWeight="{Binding IsOpened,
                                                                            Converter={StaticResource BoldIfPlayingConverter}}"
                                                       Text="{Binding Title}"
                                                       TextTrimming="CharacterEllipsis" />
                                            <TextBlock Grid.Column="2"
                                                       FontWeight="{Binding IsOpened,
                                                                            Converter={StaticResource BoldIfPlayingConverter}}"
                                                       TextAlignment="Right">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Text" Value="{Binding Duration}" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Duration}" Value="00:00">
                                                                <Setter Property="Text" Value="--:--" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                        <DockPanel LastChildFill="False">
                                            <DockPanel.Resources>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="FontSize" Value="10" />
                                                    <Setter Property="FontWeight" Value="{Binding IsOpened, Converter={StaticResource BoldIfPlayingConverter}}" />
                                                </Style>
                                                <converter:TrueFalseValueConverter x:Key="TrueFalseValueConverter"
                                                                                   FalseValue="#FFB4B4B4"
                                                                                   TrueValue="White" />
                                            </DockPanel.Resources>
                                            <ContentControl Content="{Binding}">
                                                <ContentControl.Resources>
                                                    <DataTemplate DataType="{x:Type track:LocalTrack}">
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock Text="{Binding Extension}" />
                                                            <TextBlock Text=" :: " />
                                                            <TextBlock Text="{Binding kHz}" />
                                                            <TextBlock Text=" kHz" />
                                                            <TextBlock Text=" :: " />
                                                            <TextBlock Text="{Binding kbps}" />
                                                            <TextBlock Text=" kbps" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </ContentControl.Resources>
                                            </ContentControl>
                                            <ToggleButton Width="12"
                                                          Height="12"
                                                          Margin="0,4,0,0"
                                                          Background="{StaticResource BlackBrush}"
                                                          DockPanel.Dock="Right"
                                                          Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem},
                                                                               Path=IsSelected,
                                                                               Converter={StaticResource TrueFalseValueConverter}}"
                                                          IsChecked="{Binding IsFavorite}">
                                                <ToggleButton.Style>
                                                    <Style BasedOn="{StaticResource FavoriteToggleButton}" TargetType="ToggleButton">
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=IsSelected}" Value="True">
                                                                <Setter Property="Visibility" Value="Visible" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsFavorite}" Value="True">
                                                                <Setter Property="Visibility" Value="Visible" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                        </DockPanel>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <StackPanel Grid.Row="2"
                            Margin="5,5,5,5"
                            Orientation="Vertical">
                    <TextBox Text="{Binding MusicManager.SelectedPlaylist.SearchText, UpdateSourceTrigger=PropertyChanged}" controls:TextBoxHelper.Watermark="{StaticResource Search}" />
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</UserControl>